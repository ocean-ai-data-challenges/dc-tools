[project]
name = "dctools"
description = "Basic tools common to all data challenges."
readme = "README.md"
authors = [
    {name="Kamel Ait Mohand"},
    {name="Guillermo Cossio"},
    ]
license = "GPL-3-only"
keywords = ["xarray", "sea-surface-height", "ocean", "benchmark"]
dynamic = [
    "version",
    "classifiers",
    ]

requires-python = ">=3.11.0,<3.14.0"
dependencies = [
    "argopy>=1.1.0",
    "cartopy>=0.24.1",
    "copernicusmarine>=2.2.2",
    "dask>=2025.7.0",
    "dask[distributed]>=2025.01.0",
    "ftputil (>=5.1.0,<6.0.0)",
    "geopy (>=2.4.1,<3.0.0)",
    "geopandas (>=1.0.1,<2.0.0)",
    "h5py>=3.13.0",
    "json-handler>=2.0.1",
    "loguru>=0.7.3",
    "memory-profiler>=0.61.0",
    "netcdf4 (>=1.5.8,<=1.7.2)",
    "nbformat>=5.10.4",
    "numpy (>=1.25,<2.0.0)",
    "python-json-logger>=3.3.0",
    "pyarrow",
    "pyinterp>=2025.3.0",
    "rich>=13.9.4",
    "s3fs>=2024.10.0",
    "shapely>=1.8.4",
    "tabulate",
    "torch (>=2.6.0,<3.0.0)",
    "torchvision (>=0.21.0,<0.22.0)",
    "torchgeo>=0.6.2",
    "xarray>=2024",
    "xbatcher>=0.4.0",
    "xskillscore>=0.0.27",
    "zarr (>=2.14.2,<3.0.0)",
    "scipy (>=1.13.1,<2.0.0)",
    "dill (>=0.4.0,<0.5.0)"
]


[project.urls]
Repository = "https://github.com/ppr-ocean-ia/dc-tools/tree/main"

[tool.poetry]
version = "0.0.1"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
poethepoet = "^0.33.0"
pytest = "^7.3.1"
pytest-cov = "^6.0.0"
ruff = "^0.9.10"
mypy = "*"
wget = "^3.2"
patool = "^3.1.3"

[tool.poetry.group.custom]
optional = false

[tool.poetry.group.custom.dependencies]
#oceanbench = { git = "ssh://git@github.com/aitmohandk/oceanbench", branch = "main" }
#oceanbench = { git = "https://github.com/aitmohandk/oceanbench.git", branch = "main" }
# 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
oceanbench = { git = "git@github.com:ppr-ocean-ia/oceanbench.git", branch = "main" }
#xrpatcher = { git = "ssh://git@github.com/jejjohnson/xrpatcher.git", branch = "main" }
xrpatcher = { git = "https://github.com/jejjohnson/xrpatcher.git", branch = "main" }
#xesmf = { git = "git+https://github.com/pangeo-data/xESMF.git" }
xesmf = { git = "https://github.com/pangeo-data/xESMF.git", branch = "master" }

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core", "setuptools", "wheel", "cmake"]

[tool.ruff]
line-length = 100
indent-width = 4
exclude = [
    ".eggs",
    ".git",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "docs",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint]
# E - pycodestyle subsets:
		# E4 - whitespace
		# E7 - multiple-statements
		# E9 - trailing-whitespace
# F - Enable Pyflakes
# B - Enable flake8-bugbear
# W - Enable pycodestyle
# C901 - complex-structure
# D - Enable flake8-docstrings
# E501 - line-too-long
select = ["D", "W", "F", "E", "B"]
ignore = ["D401", "D406", "D407"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"  # Accepts: "google", "numpy", or "pep257".

[tool.mypy]
python_version = "3.13"
disable_error_code = ["import-untyped"]
check_untyped_defs = true
ignore_missing_imports = false
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[tool.poe.tasks]
types = "mypy --install-types --non-interactive dctools"
lint = "ruff check 'dctools' 'tests'"
test = "pytest --capture=no --cov=dctools --cov-fail-under=80 tests/"
# run all
all = [ {ref="lint"}, {ref="types"}, {ref="test"} ]

[[tool.poetry.packages]]
include = "dctools"